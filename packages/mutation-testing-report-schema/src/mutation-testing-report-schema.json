{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://stryker-mutator.io/report.schema.json",
  "title": "MutationTestResult",
  "description": "Schema for a mutation testing report.",
  "type": "object",
  "required": ["schemaVersion", "thresholds", "files"],
  "properties": {
    "schemaVersion": {
      "type": "string",
      "pattern": "^1(\\.\\d*)?$",
      "description": "Major version of this report. Used for compatibility.",
      "examples": ["1"]
    },
    "thresholds": {
      "type": "object",
      "title": "Thresholds",
      "description": "Thresholds for the status of the reported application.",
      "required": ["high", "low"],
      "properties": {
        "high": {
          "type": "integer",
          "description": "Higher bound threshold.",
          "minimum": 0,
          "maximum": 100,
          "examples": [80]
        },
        "low": {
          "type": "integer",
          "description": "Lower bound threshold.",
          "minimum": 0,
          "maximum": 100,
          "examples": [60]
        }
      }
    },
    "projectRoot": {
      "type": "string",
      "description": "The optional location of the project root.",
      "examples": ["C:\\Projects\\project-under-test", "/home/user/projects/project-under-test"]
    },
    "files": {
      "type": "object",
      "title": "FileResultDictionary",
      "description": "All mutated files.",
      "additionalProperties": {
        "type": "object",
        "title": "FileResult",
        "description": "Mutated file, with the relative path of the file as the key.",
        "required": ["language", "source", "mutants"],
        "properties": {
          "language": {
            "type": "string",
            "description": "Programming language that is used. Used for code highlighting, see https://prismjs.com/#examples.",
            "examples": ["javascript", "typescript", "cs", "scala", "java"]
          },
          "source": {
            "type": "string",
            "description": "Full source code of the mutated file, this is used for highlighting.",
            "examples": ["using System; using....."]
          },
          "mutants": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "object",
              "title": "MutantResult",
              "description": "Single mutation.",
              "required": ["id", "mutatorName", "location", "status"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique id, can be used to correlate this mutant with other reports.",
                  "examples": ["321321"]
                },
                "mutatorName": {
                  "type": "string",
                  "description": "Category of the mutation.",
                  "examples": ["ConditionalExpression", "EqualityOperator", "LogicalOperator"]
                },
                "replacement": {
                  "type": "string",
                  "description": "Actual mutation that has been applied.",
                  "examples": ["-", "+", "&&", "||"]
                },
                "description": {
                  "type": "string",
                  "description": "Description of the applied mutation.",
                  "examples": ["removed call to java/io/Writer::write"]
                },
                "location": {
                  "$ref": "#/definitions/location"
                },
                "status": {
                  "type": "string",
                  "title": "MutantStatus",
                  "description": "Result of the mutation.",
                  "enum": ["Killed", "Survived", "NoCoverage", "CompileError", "RuntimeError", "Timeout", "Ignored"]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "position": {
      "type": "object",
      "title": "Position",
      "description": "Position of a mutation. Both line and column start at one.",
      "required": ["line", "column"],
      "properties": {
        "line": {
          "type": "integer",
          "minimum": 1,
          "examples": [4]
        },
        "column": {
          "type": "integer",
          "minimum": 1,
          "examples": [3]
        }
      }
    },
    "location": {
      "type": "object",
      "description": "A location with start and end. Start is inclusive, end is exclusive.",
      "required": ["start", "end"],
      "properties": {
        "start": {
          "$ref": "#/definitions/position"
        },
        "end": {
          "$ref": "#/definitions/position"
        }
      }
    }
  }
}
