$d: 1.5em;
$s: 1.2em;
$p: 0.15em;
$g: .06em;
$width: 2.9em;

/* Math */
@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  } @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}

@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

@function pi() {
  @return 3.14159265359;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}

/* Star */
@mixin star($n: 5, $k: .65, $p: 3) {
	$m: 2*$n;
	$ba: 360deg/$m;
	$la: $ba/$p;
	$ro: 50%;
	$ri: $k*$ro;
	$plist: ();
	
	@for $i from 0 to $m {
		$sa: ($i - .5)*$ba - 90deg;
		
		@if $i%2 == 0 { // pointy part
			$ma: $sa + .5*$ba;
			
			$plist: $plist, 
				$ro + $ri*cos($sa) $ro + $ri*sin($sa), 
				$ro + $ro*cos($ma) $ro + $ro*sin($ma)
		}
		@else { // round part
			@for $j from 0 to $p {
				$ca: $sa + $j*$la;
				
				$plist: $plist, 
					$ro + $ri*cos($ca) $ro + $ri*sin($ca)
			}
		}
	}
	
	--poly: #{polygon($plist)};
	-webkit-clip-path: var(--poly);
					clip-path: var(--poly);
}

/* Checkbox */
#darkTheme {
	position: absolute;
  right: 100vw;
	
	+ label {
		--i: 0;
		--j: calc(1 - var(--i));		
		display: grid;
		grid-gap: $p $g;
		overflow: hidden;
		padding: $p;
		height: $d;
		border-radius: .5*$s + $p;
		background: hsl(199, 98%, calc(var(--j)*48%));
		color: transparent;
		user-select: none;
		transition: .3s;
		cursor: pointer;
		
		&:before, &:after {
			width: $s; height: $s;
			transition: inherit;
			content: ''
		}
		
		&:before {
			transform-origin: 20%	20%;
			transform: translate(calc(var(--i)*(100% + #{$g}))) 
								 scale(calc(1 - var(--i)*.8));
			background: hsl(60, 100%, 50%);
			@include star(10, .75)
		}
		
		&:after {
			grid-column: 2;
			border-radius: 50%;
			transform: translatey(calc(var(--i)*(-130% - #{$p})));
			background: 
				radial-gradient(circle at 19% 19%, 
						transparent 41%, #fff 43%)
		}
	}
	
	&:checked + label { --i: 1 }
}

.check-box-container {
  width: $width;
}